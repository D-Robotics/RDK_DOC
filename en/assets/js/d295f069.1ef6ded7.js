"use strict";(self.webpackChunkrdk_doc=self.webpackChunkrdk_doc||[]).push([[2930],{89345:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>d,default:()=>m,frontMatter:()=>i,metadata:()=>a,toc:()=>l});var o=t(74848),r=t(28453);const i={sidebar_position:2},d="6.2 Driver Development Guide",a={id:"Advanced_development/linux_development/driver_development/driver_development",title:"6.2 Driver Development Guide",description:"RDK X3 system software is based on the Linux operating system, with a kernel version of 4.14.x. The system provides a basic set of C and C++ libraries, hardware module interface libraries, and a C++ algorithm application framework as the runtime environment for applications.",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/07_Advanced_development/02_linux_development/driver_development/driver_development.md",sourceDirName:"07_Advanced_development/02_linux_development/driver_development",slug:"/Advanced_development/linux_development/driver_development/",permalink:"/rdk_doc/en/Advanced_development/linux_development/driver_development/",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/07_Advanced_development/02_linux_development/driver_development/driver_development.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"7.2.1 Development Environment Setup and Compilation Instructions",permalink:"/rdk_doc/en/Advanced_development/linux_development/environment_build"},next:{title:"Configuration of Uboot and Kernel Options",permalink:"/rdk_doc/en/Advanced_development/linux_development/driver_development/uboot_kernel_config"}},s={},l=[];function p(e){const n={h1:"h1",img:"img",p:"p",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"62-driver-development-guide",children:"6.2 Driver Development Guide"}),"\n",(0,o.jsx)(n.p,{children:"RDK X3 system software is based on the Linux operating system, with a kernel version of 4.14.x. The system provides a basic set of C and C++ libraries, hardware module interface libraries, and a C++ algorithm application framework as the runtime environment for applications."}),"\n",(0,o.jsx)(n.p,{children:"Depending on the product form, the system provides different software modules to form the final product. The following diagram shows the software module architecture of the system:"}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.img,{alt:"46a619838b123841cf4a4baea970364d",src:t(44245).A+"",width:"794",height:"443"})})]})}function m(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(p,{...e})}):p(e)}},44245:(e,n,t)=>{t.d(n,{A:()=>o});const o=t.p+"assets/images/46a619838b123841cf4a4baea970364d-a96284680a0fa8a432525df067ec3a45.png"},28453:(e,n,t)=>{t.d(n,{R:()=>d,x:()=>a});var o=t(96540);const r={},i=o.createContext(r);function d(e){const n=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),o.createElement(i.Provider,{value:n},e.children)}}}]);