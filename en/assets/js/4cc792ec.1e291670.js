"use strict";(self.webpackChunkrdk_doc=self.webpackChunkrdk_doc||[]).push([[5943],{58901:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>d,contentTitle:()=>l,default:()=>m,frontMatter:()=>i,metadata:()=>c,toc:()=>h});var t=s(74848),o=s(28453),r=s(93859),a=s(19365);const i={sidebar_position:1},l="5.2.1 Image Capture",c={id:"Robot_development/quick_demo/demo_sensor",title:"5.2.1 Image Capture",description:"USB camera",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/05_Robot_development/02_quick_demo/demo_sensor.md",sourceDirName:"05_Robot_development/02_quick_demo",slug:"/Robot_development/quick_demo/demo_sensor",permalink:"/rdk_doc/en/Robot_development/quick_demo/demo_sensor",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/05_Robot_development/02_quick_demo/demo_sensor.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"5.1.6 Version Release Notes",permalink:"/rdk_doc/en/Robot_development/quick_start/changelog"},next:{title:"5.2.2 Display",permalink:"/rdk_doc/en/Robot_development/quick_demo/demo_render"}},d={},h=[{value:"USB camera",id:"usb-camera",level:2},{value:"Introduction",id:"introduction",level:3},{value:"Supported Platforms",id:"supported-platforms",level:3},{value:"Preparation",id:"preparation",level:3},{value:"RDK",id:"rdk",level:4},{value:"How to Use (default usb_pixel_format is mjpeg)",id:"how-to-use-default-usb_pixel_format-is-mjpeg",level:3},{value:"Usage Method 2 (usb_pixel_format is yuyv2rgb)",id:"usage-method-2-usb_pixel_format-is-yuyv2rgb",level:3},{value:"Notes",id:"notes",level:3},{value:"MIPI camera",id:"mipi-camera",level:2},{value:"Introduction",id:"introduction-1",level:3},{value:"Supported Platforms",id:"supported-platforms-1",level:3},{value:"Preparation",id:"preparation-1",level:3},{value:"RDK",id:"rdk-1",level:4},{value:"Usage",id:"usage",level:3},{value:"RDK Platform",id:"rdk-platform",level:4},{value:"Caution",id:"caution",level:3},{value:"Dual MIPI camera",id:"dual-mipi-camera",level:2},{value:"Introduction",id:"introduction-2",level:3},{value:"Supported Platforms",id:"supported-platforms-2",level:3},{value:"Preparation",id:"preparation-2",level:3},{value:"RDK",id:"rdk-2",level:4},{value:"Usage",id:"usage-1",level:3},{value:"RDK Platform",id:"rdk-platform-1",level:4},{value:"Caution",id:"caution-1",level:3},{value:"RGBD camera",id:"rgbd-camera",level:2},{value:"Introduction",id:"introduction-3",level:3},{value:"Supported Platforms",id:"supported-platforms-3",level:3},{value:"Preparations",id:"preparations",level:3},{value:"RDK Platform",id:"rdk-platform-2",level:4},{value:"Usage",id:"usage-2",level:3},{value:"RDK",id:"rdk-3",level:4},{value:"Instructions",id:"instructions",level:3}];function u(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"521-image-capture",children:"5.2.1 Image Capture"}),"\n","\n",(0,t.jsx)(n.h2,{id:"usb-camera",children:"USB camera"}),"\n",(0,t.jsx)(n.h3,{id:"introduction",children:"Introduction"}),"\n",(0,t.jsx)(n.p,{children:"In order to achieve environmental perception capability, robot products usually carry cameras to obtain image information. USB cameras are easy to obtain, easy to use, and have good versatility. TogetheROS.Bot supports USB cameras and supports ROS2 standard image messages."}),"\n",(0,t.jsxs)(n.p,{children:["Code repository:  (",(0,t.jsx)(n.a,{href:"https://github.com/D-Robotics/hobot_usb_cam.git",children:"https://github.com/D-Robotics/hobot_usb_cam.git"}),")"]}),"\n",(0,t.jsx)(n.h3,{id:"supported-platforms",children:"Supported Platforms"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Platform"}),(0,t.jsx)(n.th,{children:"Operating Mode"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"RDK X3, RDK X3 Module, RDK X5"}),(0,t.jsx)(n.td,{children:"Ubuntu 20.04 (Foxy), Ubuntu 22.04 (Humble)"})]})})]}),"\n",(0,t.jsx)(n.h3,{id:"preparation",children:"Preparation"}),"\n",(0,t.jsx)(n.h4,{id:"rdk",children:"RDK"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Confirm that the USB camera is working properly and connect it to the USB slot of the RDK."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"RDK has burned the  Ubuntu 20.04/22.04 system image provided by D-Robotics."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"RDK has successfully installed tros.b."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Confirm that the PC can access the RDK via the network."}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"how-to-use-default-usb_pixel_format-is-mjpeg",children:"How to Use (default usb_pixel_format is mjpeg)"}),"\n",(0,t.jsx)(n.p,{children:"Taking RDK as an example:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Log in to the RDK via SSH and confirm the device name of the USB camera. Here, let's take ",(0,t.jsx)(n.code,{children:"/dev/video8"})," as an example."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Start the USB camera using the following command:"}),"\n",(0,t.jsxs)(r.A,{groupId:"tros-distro",children:[(0,t.jsx)(a.A,{value:"foxy",label:"Foxy",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Configure the tros.b environment\nsource /opt/tros/setup.bash\n"})})}),(0,t.jsx)(a.A,{value:"humble",label:"Humble",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Configure the tros.b environment\nsource /opt/tros/humble/setup.bash\n"})})})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Start the launch file\nros2 launch hobot_usb_cam hobot_usb_cam.launch.py usb_video_device:=/dev/video8\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"If the program outputs the following information, it means the node has been successfully launched."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"[INFO] [launch]: All log files can be found below /root/.ros/log/2024-01-18-19-44-39-419588-ubuntu-3951\n[INFO] [launch]: Default logging verbosity is set to INFO\n[INFO] [hobot_usb_cam-1]: process started with pid [3953]\n[hobot_usb_cam-1] [WARN] [1705578280.808870437] [hobot_usb_cam]: framerate: 30\n[hobot_usb_cam-1] [WARN] [1705578280.809851560] [hobot_usb_cam]: pixel_format_name: mjpeg\n[hobot_usb_cam-1] [WARN] [1705578280.936383062] [hobot_usb_cam]: Camera calibration file: [/opt/tros/lib/hobot_usb_cam/config/usb_camera_calibration.yaml] does not exist!\n[hobot_usb_cam-1] If you need calibration msg, please make sure the calibration file path is correct and the calibration file exists!\n[hobot_usb_cam-1] [WARN] [1705578280.936697507] [hobot_usb_cam]: This devices supproted formats:\n[hobot_usb_cam-1] [WARN] [1705578280.936858791] [hobot_usb_cam]:        Motion-JPEG: 640 x 480 (30 Hz)\n[hobot_usb_cam-1] [WARN] [1705578280.936912830] [hobot_usb_cam]:        Motion-JPEG: 1920 x 1080 (30 Hz)\n[hobot_usb_cam-1] [WARN] [1705578280.936960328] [hobot_usb_cam]:        Motion-JPEG: 320 x 240 (30 Hz)\n[hobot_usb_cam-1] [WARN] [1705578280.937007285] [hobot_usb_cam]:        Motion-JPEG: 800 x 600 (30 Hz)\n[hobot_usb_cam-1] [WARN] [1705578280.937053241] [hobot_usb_cam]:        Motion-JPEG: 1280 x 720 (30 Hz)\n[hobot_usb_cam-1] [WARN] [1705578280.937098906] [hobot_usb_cam]:        Motion-JPEG: 1024 x 576 (30 Hz)\n[hobot_usb_cam-1] [WARN] [1705578280.937144528] [hobot_usb_cam]:        YUYV 4:2:2: 640 x 480 (30 Hz)\n[hobot_usb_cam-1] [WARN] [1705578280.937190068] [hobot_usb_cam]:        YUYV 4:2:2: 1920 x 1080 (5 Hz)\n[hobot_usb_cam-1] [WARN] [1705578280.937235858] [hobot_usb_cam]:        YUYV 4:2:2: 320 x 240 (30 Hz)\n[hobot_usb_cam-1] [WARN] [1705578280.937282064] [hobot_usb_cam]:        YUYV 4:2:2: 800 x 600 (20 Hz)\n[hobot_usb_cam-1] [WARN] [1705578280.937328020] [hobot_usb_cam]:        YUYV 4:2:2: 1280 x 720 (10 Hz)\n[hobot_usb_cam-1] [WARN] [1705578280.937373518] [hobot_usb_cam]:        YUYV 4:2:2: 1024 x 576 (15 Hz)\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Open another terminal to view the USB camera image on the web page:"}),"\n",(0,t.jsxs)(r.A,{groupId:"tros-distro",children:[(0,t.jsx)(a.A,{value:"foxy",label:"Foxy",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Configure the tros.b environment\nsource /opt/tros/setup.bash\n"})})}),(0,t.jsx)(a.A,{value:"humble",label:"Humble",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Configure the tros.b environment\nsource /opt/tros/humble/setup.bash\n"})})})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"ros2 launch websocket websocket.launch.py websocket_image_topic:=/image websocket_only_show_image:=true\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Open a web browser (Chrome/Firefox/Edge) on your PC and enter  ",(0,t.jsx)(n.code,{children:"http://IP:8000"})," (where IP is the RDK IP address). Click on the upper left corner to view the real-time image from the USB camera.\n",(0,t.jsx)(n.img,{alt:"image-usb-camera",src:s(97214).A+"",width:"1862",height:"941"})]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"usage-method-2-usb_pixel_format-is-yuyv2rgb",children:"Usage Method 2 (usb_pixel_format is yuyv2rgb)"}),"\n",(0,t.jsx)(n.p,{children:"Here is an example using the RDK platform:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["SSH into the RDK and confirm the USB camera device name, for example ",(0,t.jsx)(n.code,{children:"/dev/video8"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Start the USB camera using the following command:"}),"\n",(0,t.jsxs)(r.A,{groupId:"tros-distro",children:[(0,t.jsx)(a.A,{value:"foxy",label:"Foxy",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Configure the tros.b environment\nsource /opt/tros/setup.bash\n"})})}),(0,t.jsx)(a.A,{value:"humble",label:"Humble",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Configure the tros.b environment\nsource /opt/tros/humble/setup.bash\n"})})})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"ros2 launch hobot_usb_cam hobot_usb_cam.launch.py usb_video_device:=/dev/video8 usb_pixel_format:=yuyv2rgb usb_image_width:=640 usb_image_height:=480\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"If the following information is outputted by the program, it indicates that the node has been successfully launched"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"[INFO] [launch]: All log files can be found below /root/.ros/log/2024-01-18-19-44-39-419588-ubuntu-3951\n[INFO] [launch]: Default logging verbosity is set to INFO\n[INFO] [hobot_usb_cam-1]: process started with pid [3953]\n[hobot_usb_cam-1] [WARN] [1705578280.808870437] [hobot_usb_cam]: framerate: 30\n[hobot_usb_cam-1] [WARN] [1705578280.809851560] [hobot_usb_cam]: pixel_format_name: yuyv2rgb\n[hobot_usb_cam-1] [WARN] [1705578280.936383062] [hobot_usb_cam]: Camera calibration file: [/opt/tros/lib/hobot_usb_cam/config/usb_camera_calibration.yaml] does not exist!\n[hobot_usb_cam-1] If you need calibration msg, please make sure the calibration file path is correct and the calibration file exists!\n[hobot_usb_cam-1] [WARN] [1705578280.936697507] [hobot_usb_cam]: This devices supproted formats:\n[hobot_usb_cam-1] [WARN] [1705578280.936858791] [hobot_usb_cam]:        Motion-JPEG: 640 x 480 (30 Hz)\n[hobot_usb_cam-1] [WARN] [1705578280.936912830] [hobot_usb_cam]:        Motion-JPEG: 1920 x 1080 (30 Hz)\n[hobot_usb_cam-1] [WARN] [1705578280.936960328] [hobot_usb_cam]:        Motion-JPEG: 320 x 240 (30 Hz)\n[hobot_usb_cam-1] [WARN] [1705578280.937007285] [hobot_usb_cam]:        Motion-JPEG: 800 x 600 (30 Hz)\n[hobot_usb_cam-1] [WARN] [1705578280.937053241] [hobot_usb_cam]:        Motion-JPEG: 1280 x 720 (30 Hz)\n[hobot_usb_cam-1] [WARN] [1705578280.9379806] [hobot_usb_cam]:        Motion-JPEG: 1024 x 576 (30 Hz)\n[hobot_usb_cam-1] [WARN] [1705578280.937144528] [hobot_usb_cam]:        YUYV 4:2:2: 640 x 480 (30 Hz)\n[hobot_usb_cam-1] [WARN] [1705578280.937190068] [hobot_usb_cam]:        YUYV 4:2:2: 1920 x 1080 (5 Hz)\n[hobot_usb_cam-1] [WARN] [1705578280.937235858] [hobot_usb_cam]:        YUYV 4:2:2: 320 x 240 (30 Hz)\n[hobot_usb_cam-1] [WARN] [1705578280.937282064] [hobot_usb_cam]:        YUYV 4:2:2: 800 x 600 (20 Hz)\n[hobot_usb_cam-1] [WARN] [1705578280.937328020] [hobot_usb_cam]:        YUYV 4:2:2: 1280 x 720 (10 Hz)\n[hobot_usb_cam-1] [WARN] [1705578280.937373518] [hobot_usb_cam]:        YUYV 4:2:2: 1024 x 576 (15 Hz)\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Encode to mjpeg with hobot codec"}),"\n",(0,t.jsxs)(r.A,{groupId:"tros-distro",children:[(0,t.jsx)(a.A,{value:"foxy",label:"Foxy",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Configure the tros.b environment\nsource /opt/tros/setup.bash\n"})})}),(0,t.jsx)(a.A,{value:"humble",label:"Humble",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Configure the tros.b environment\nsource /opt/tros/humble/setup.bash\n"})})})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Start the launch file\nros2 launch hobot_codec hobot_codec_encode.launch.py codec_in_mode:=ros codec_in_format:=rgb8 codec_out_mode:=ros codec_sub_topic:=/image codec_pub_topic:=/image_mjpeg\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"View the USB camera image on the web side, open a new terminal:"}),"\n",(0,t.jsxs)(r.A,{groupId:"tros-distro",children:[(0,t.jsx)(a.A,{value:"foxy",label:"Foxy",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Configure the tros.b environment\nsource /opt/tros/setup.bash\n"})})}),(0,t.jsx)(a.A,{value:"humble",label:"Humble",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Configure the tros.b environment\nsource /opt/tros/humble/setup.bash\n"})})})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"ros2 launch websocket websocket.launch.py websocket_image_topic:=/image_mjpeg websocket_only_show_image:=true\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Open a browser on your PC (chrome/firefox/edge) and enter  ",(0,t.jsx)(n.code,{children:"http://IP:8000"})," (IP is the RDK IP address), click on the top left to display the web side to view the real-time image from the USB camera\n",(0,t.jsx)(n.img,{alt:"image-usb-camera",src:s(97214).A+"",width:"1862",height:"941"})]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"notes",children:"Notes"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"USB cameras need to be calibrated and the camera calibration file path needs to be set in order to publish camera parameters. However, this does not affect other functionalities."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"To set the camera calibration file path, follow the steps below:"}),"\n",(0,t.jsxs)(r.A,{groupId:"tros-distro",children:[(0,t.jsx)(a.A,{value:"foxy",label:"Foxy",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Configure the tros.b environment\nsource /opt/tros/setup.bash\n"})})}),(0,t.jsx)(a.A,{value:"humble",label:"Humble",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Configure the tros.b environment\nsource /opt/tros/humble/setup.bash\n"})})})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Start with launch command\nros2 launch hobot_usb_cam hobot_usb_cam.launch.py usb_camera_calibration_file_path:=\uff08actual calibration file absolute path\uff09\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Changes to the pixel_format configuration:"}),"\n",(0,t.jsx)(n.p,{children:'hobot_usb_cam supports the following configurations:\n"mjpeg", "mjpeg-compressed", "mjpeg2rgb", "rgb8", "yuyv", "yuyv2rgb", "uyvy", "uyvy2rgb", "m4202rgb", "mono8", "mono16", "y102mono8"'}),"\n",(0,t.jsx)(n.p,{children:"Start usb camera with the default parameters of the first type to query the formats supported by the device hardware, as shown in the log below:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"[hobot_usb_cam-1] [WARN] [1705548544.174669672] [hobot_usb_cam]: This devices supproted formats:\n[hobot_usb_cam-1] [WARN] [1705548544.174844917] [hobot_usb_cam]:        Motion-JPEG: 640 x 480 (30 Hz)\n[hobot_usb_cam-1] [WARN] [1705548544.174903166] [hobot_usb_cam]:        Motion-JPEG: 1920 x 1080 (30 Hz)\n[hobot_usb_cam-1] [WARN] [1705548544.174950581] [hobot_usb_cam]:        Motion-JPEG: 320 x 240 (30 Hz)\n[hobot_usb_cam-1] [WARN] [1705548544.174996788] [hobot_usb_cam]:        Motion-JPEG: 800 x 600 (30 Hz)\n[hobot_usb_cam-1] [WARN] [1705548544.175043412] [hobot_usb_cam]:        Motion-JPEG: 1280 x 720 (30 Hz)\n[hobot_usb_cam-1] [WARN] [1705548544.175089161] [hobot_usb_cam]:        Motion-JPEG: 1024 x 576 (30 Hz)\n[hobot_usb_cam-1] [WARN] [1705548544.175135035] [hobot_usb_cam]:        YUYV 4:2:2: 640 x 480 (30 Hz)\n[hobot_usb_cam-1] [WARN] [1705548544.175180325] [hobot_usb_cam]:        YUYV 4:2:2: 1920 x 1080 (5 Hz)\n[hobot_usb_cam-1] [WARN] [1705548544.175226449] [hobot_usb_cam]:        YUYV 4:2:2: 320 x 240 (30 Hz)\n[hobot_usb_cam-1] [WARN] [1705548544.175272365] [hobot_usb_cam]:        YUYV 4:2:2: 800 x 600 (20 Hz)\n[hobot_usb_cam-1] [WARN] [1705548544.175318697] [hobot_usb_cam]:        YUYV 4:2:2: 1280 x 720 (10 Hz)\n[hobot_usb_cam-1] [WARN] [1705548544.175365195] [hobot_usb_cam]:        YUYV 4:2:2: 1024 x 576 (15 Hz)\n"})}),"\n",(0,t.jsx)(n.p,{children:"a. Query the image formats supported by the usb camera, as shown in the log above. The log shows support for mjpeg and YUYV."}),"\n",(0,t.jsx)(n.p,{children:'b. Only "mjpeg", "mjpeg-compressed", "mjpeg2rgb", "yuyv", and "yuyv2rgb" can be set; otherwise, the hobot_usb_cam program will exit.'}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"mipi-camera",children:"MIPI camera"}),"\n",(0,t.jsx)(n.h3,{id:"introduction-1",children:"Introduction"}),"\n",(0,t.jsx)(n.p,{children:"To achieve environmental perception capabilities, robots often carry cameras, ToF, and other types of sensors. In order to reduce the cost of sensor adaptation and usage for users, TogetheROS.Bot wraps multiple commonly used sensors into the hobot_sensor module and abstracts them into ROS standard image messages. When the configured sensor parameters do not match the connected camera, the program will automatically adapt to the correct sensor type. The currently supported MIPI sensor types are as follows:"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Index"}),(0,t.jsx)(n.th,{children:"Name"}),(0,t.jsx)(n.th,{children:"Representational Image"}),(0,t.jsx)(n.th,{children:"Parameters"}),(0,t.jsx)(n.th,{children:"Reference Link"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"1"}),(0,t.jsx)(n.td,{children:"F37"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.img,{alt:"F37",src:s(91857).A+"",width:"345",height:"345"})}),(0,t.jsx)(n.td,{children:"200W Pixel"}),(0,t.jsx)(n.td,{children:"RDK X3, RDK X3 Module"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"2"}),(0,t.jsx)(n.td,{children:"GC4663"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.img,{alt:"GC4663",src:s(16896).A+"",width:"345",height:"345"})}),(0,t.jsx)(n.td,{children:"400W Pixel"}),(0,t.jsx)(n.td,{children:"RDK X3, RDK X3 Module"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"3"}),(0,t.jsx)(n.td,{children:"IMX219"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.img,{alt:"IMX219",src:s(68379).A+"",width:"345",height:"345"})}),(0,t.jsx)(n.td,{children:"800W Pixel"}),(0,t.jsx)(n.td,{children:"RDK X3, RDK X3 Module, RDK Ultra, RDK X5"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"4"}),(0,t.jsx)(n.td,{children:"IMX477"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.img,{alt:"IMX477",src:s(99505).A+"",width:"1600",height:"1200"})}),(0,t.jsx)(n.td,{children:"200W Pixel"}),(0,t.jsx)(n.td,{children:"RDK X3, RDK X3 Module"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"5"}),(0,t.jsx)(n.td,{children:"OV5647"}),(0,t.jsx)(n.td,{children:(0,t.jsx)(n.img,{alt:"OV5647",src:s(10752).A+"",width:"1440",height:"1080"})}),(0,t.jsx)(n.td,{children:"200W Pixel"}),(0,t.jsx)(n.td,{children:"RDK X3, RDK X3 Module, RDK X5"})]})]})]}),"\n",(0,t.jsxs)(n.p,{children:["Code repository:  (",(0,t.jsx)(n.a,{href:"https://github.com/D-Robotics/hobot_mipi_cam.git",children:"https://github.com/D-Robotics/hobot_mipi_cam.git"}),")"]}),"\n",(0,t.jsx)(n.h3,{id:"supported-platforms-1",children:"Supported Platforms"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Platform"}),(0,t.jsx)(n.th,{children:"System"}),(0,t.jsx)(n.th,{children:"Function"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"RDK X3, RDK X3 Module, RDK X5"}),(0,t.jsx)(n.td,{children:"Ubuntu 20.04 (Foxy), Ubuntu 22.04 (Humble)"}),(0,t.jsx)(n.td,{children:"Start MIPI camera and display images through Web"})]})})]}),"\n",(0,t.jsx)(n.h3,{id:"preparation-1",children:"Preparation"}),"\n",(0,t.jsx)(n.h4,{id:"rdk-1",children:"RDK"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Confirm that the camera is correctly connected to RDK. For example, the connection between the F37 camera and RDK X3 is shown in the following figure:"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"image-X3-PI-Camera",src:s(39382).A+"",width:"450",height:"297"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"RDK is flashed with the  Ubuntu 20.04/22.04 system image provided by D-Robotics"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"RDK has successfully installed tros.b"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Confirm that the PC can access RDK through the network"}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"usage",children:"Usage"}),"\n",(0,t.jsx)(n.h4,{id:"rdk-platform",children:"RDK Platform"}),"\n",(0,t.jsx)(n.p,{children:"Take the F37 as an example to introduce the method of acquiring and previewing images:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["SSH into RDK and determine the camera model, take ",(0,t.jsx)(n.code,{children:"F37"})," as an example, and determine the path to read the camera calibration file, take ",(0,t.jsx)(n.code,{children:"/opt/tros/lib/mipi_cam/config/F37_calibration.yaml"})," as an example."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Start the ",(0,t.jsx)(n.code,{children:"hobot_sensor"})," node with the following command:"]}),"\n",(0,t.jsxs)(r.A,{groupId:"tros-distro",children:[(0,t.jsx)(a.A,{value:"foxy",label:"Foxy",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Configure the tros.b environment\nsource /opt/tros/setup.bash\n"})})}),(0,t.jsx)(a.A,{value:"humble",label:"Humble",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Configure the tros.b environment\nsource /opt/tros/humble/setup.bash\n"})})})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"# Start the launch file\nros2 launch mipi_cam mipi_cam.launch.py mipi_video_device:=F37 mipi_camera_calibration_file_path:=/opt/tros/${TROS_DISTRO}/lib/mipi_cam/config/F37_calibration.yaml\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"If the following information is outputted, it means that the node has been successfully started:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"[INFO] [launch]: All log files can be found below /root/.ros/log/2022-06-11-15-16-13-641715-ubuntu-8852\n[INFO] [launch]: Default logging verbosity is set to INFO\n[INFO] [mipi_cam-1]: process started with pid [8854]\n...\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"To view the F37 camera image on the web, as raw data needs to be encoded into JPEG images, two terminals need to be launched separately: one for subscribing to MIPI data and encoding it into JPEG, and one for publishing with a webservice."}),"\n",(0,t.jsxs)(r.A,{groupId:"tros-distro",children:[(0,t.jsx)(a.A,{value:"foxy",label:"Foxy",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Configure the tros.b environment\nsource /opt/tros/setup.bash\n"})})}),(0,t.jsx)(a.A,{value:"humble",label:"Humble",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Configure the tros.b environment\nsource /opt/tros/humble/setup.bash\n"})})})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"# Start encoding\nros2 launch hobot_codec hobot_codec_encode.launch.py\n\n# Launch another terminal\n# Start websocket\nros2 launch websocket websocket.launch.py websocket_image_topic:=/image_jpeg websocket_only_show_image:=true\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Open a web browser on the PC (Chrome/Firefox/Edge) and enter  ",(0,t.jsx)(n.code,{children:"http://IP:8000"})," (IP address of the RDK) to see the real-time display of the F37 camera's output.\n",(0,t.jsx)(n.img,{alt:"web-f37-codec",src:s(99001).A+"",title:"Real-time image",width:"1862",height:"941"})]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"To query the camera's intrinsic parameters on the PC (the specific data may vary depending on the calibrated camera file), use the following command and view the results:"}),"\n",(0,t.jsxs)(r.A,{groupId:"tros-distro",children:[(0,t.jsx)(a.A,{value:"foxy",label:"Foxy",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"root@ubuntu:~# source /opt/ros/foxy/setup.bash\n"})})}),(0,t.jsx)(a.A,{value:"humble",label:"Humble",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"root@ubuntu:~# source /opt/ros/humble/setup.bash\n"})})})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:" root@ubuntu:~# ros2 topic echo /camera_info\n     header:\n stamp:\n     sec: 1662013622\n     nanosec: 672922214\n frame_id: default_cam\n height: 1080\n width: 1920\n distortion_model: plumb_bob\n d:\n - 0.169978\n - -0.697303\n - -0.002944\n - -0.004961\n - 0.0\n k:\n - 1726.597634\n - 0.0\n - 904.979671\n - 0.0\n - 1737.359551\n - 529.123375\n - 0.0\n - 0.0\n - 1.0\n r:\n - 1.0\n - 0.0- 0.0\n- 0.0\n- 1.0\n- 0.0\n- 0.0\n- 0.0\n- 1.0\np:\n- 1685.497559\n- 0.0\n- 881.6396\n- 0.0\n- 0.0\n- 1756.460205\n- 526.781147\n- 0.0\n- 0.0\n- 0.0\n- 1.0\n- 0.0\nbinning_x: 0\nbinning_y: 0\nroi:\nx_offset: 0\ny_offset: 0\nheight: 0\nwidth: 0\ndo_rectify: false\n\n"})}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"caution",children:"Caution"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["mipi_cam provides the calibration files for two types of cameras, F37 and GC4663. By default, it reads the calibration file for F37, ",(0,t.jsx)(n.code,{children:"F37_calibration.yaml"}),". If you want to use GC4663, please change the path to the camera calibration file accordingly, as below:"]}),"\n",(0,t.jsxs)(r.A,{groupId:"tros-distro",children:[(0,t.jsx)(a.A,{value:"foxy",label:"Foxy",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Configure the tros.b environment\nsource /opt/tros/setup.bash\n"})})}),(0,t.jsx)(a.A,{value:"humble",label:"Humble",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Configure the tros.b environment\nsource /opt/tros/humble/setup.bash\n"})})})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"# Start the launch file\nros2 launch mipi_cam mipi_cam.launch.py mipi_video_device:=GC4663 mipi_camera_calibration_file_path:=/opt/tros/${TROS_DISTRO}/lib/mipi_cam/config/GC4663_calibration.yaml\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Caution when plugging/unplugging the camera:"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"NEVER plug or unplug the camera module without powering off the development board first. Otherwise, it may result in damaging the camera module."})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"If you encounter any issues with the startup of the hobot_sensor node, you can troubleshoot the problems by following these steps:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Check the hardware connections."}),"\n",(0,t.jsx)(n.li,{children:"Make sure you have set up the tros.b environment."}),"\n",(0,t.jsx)(n.li,{children:"Verify the parameters are correct, for more details refer to the Hobot_Sensors README.md file."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"dual-mipi-camera",children:"Dual MIPI camera"}),"\n",(0,t.jsx)(n.h3,{id:"introduction-2",children:"Introduction"}),"\n",(0,t.jsx)(n.p,{children:"To achieve environmental perception capabilities, robots often carry stereo cameras, ToF, and other types of sensors. In order to reduce the cost of sensor adaptation and usage for users, TogetheROS.Bot wraps multiple commonly used sensors into the hobot_sensor module and abstracts them into ROS standard image messages. When the configured sensor parameters do not match the connected camera, the program will automatically adapt to the correct sensor type. The currently supported MIPI sensor types are as follows:"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Model"}),(0,t.jsx)(n.th,{children:"Specifications"}),(0,t.jsx)(n.th,{children:"Supported Platforms"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Camera"}),(0,t.jsx)(n.td,{children:"SC230ai"}),(0,t.jsx)(n.td,{children:"200W"}),(0,t.jsx)(n.td,{children:"RDK X5"})]})})]}),"\n",(0,t.jsxs)(n.p,{children:["Code repository:  (",(0,t.jsx)(n.a,{href:"https://github.com/D-Robotics/hobot_mipi_cam.git",children:"https://github.com/D-Robotics/hobot_mipi_cam.git"}),")"]}),"\n",(0,t.jsx)(n.h3,{id:"supported-platforms-2",children:"Supported Platforms"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Platform"}),(0,t.jsx)(n.th,{children:"System"}),(0,t.jsx)(n.th,{children:"Function"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"RDK X5"}),(0,t.jsx)(n.td,{children:"Ubuntu 22.04 (Humble)"}),(0,t.jsx)(n.td,{children:"Start MIPI camera and display images through Web"})]})})]}),"\n",(0,t.jsx)(n.h3,{id:"preparation-2",children:"Preparation"}),"\n",(0,t.jsx)(n.h4,{id:"rdk-2",children:"RDK"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Confirm that the camera is correctly connected to RDK. For example, the connection between the dual camera and RDK X5 is shown in the following figure:"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"image-X5-PI-DualCamera",src:s(35234).A+"",width:"1920",height:"1080"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"RDK is flashed with the  Ubuntu 22.04 system image provided by D-Robotics"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"RDK has successfully installed tros.b"}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Confirm that the PC can access RDK through the network"}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"usage-1",children:"Usage"}),"\n",(0,t.jsx)(n.h4,{id:"rdk-platform-1",children:"RDK Platform"}),"\n",(0,t.jsx)(n.p,{children:"Take the SC230ai as an example to introduce the method of acquiring and previewing images:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["SSH into RDK and determine the camera model, take ",(0,t.jsx)(n.code,{children:"SC230ai"})," as an example."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Start the ",(0,t.jsx)(n.code,{children:"hobot_sensor"})," node with the following command:"]}),"\n",(0,t.jsx)(r.A,{groupId:"tros-distro",children:(0,t.jsx)(a.A,{value:"humble",label:"Humble",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Configure the tros.b environment\nsource /opt/tros/humble/setup.bash\n"})})})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"# Start the launch file\nros2 launch mipi_cam mipi_cam_dual_channel.launch.py\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"If the following information is outputted, it means that the node has been successfully started:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"[INFO] [launch]: All log files can be found below /root/.ros/log/2024-09-18-19-15-26-160110-ubuntu-3931\n[INFO] [launch]: Default logging verbosity is set to INFO\nconfig_file_path is  /opt/tros/humble/lib/mipi_cam/config/\nHobot shm pkg enables zero-copy with fastrtps profiles file: /opt/tros/humble/lib/hobot_shm/config/shm_fastdds.xml\nHobot shm pkg sets RMW_FASTRTPS_USE_QOS_FROM_XML: 1\nenv of RMW_FASTRTPS_USE_QOS_FROM_XML is  1 , ignore env setting\n[INFO] [mipi_cam-1]: process started with pid [3932]\n[mipi_cam-1] [WARN] [1726658126.449994704] [mipi_node]: frame_ts_type value: sensor\n[mipi_cam-1] [ERROR] [1726658126.455022356] [mipi_factory]: This is't support device type(), start defaule capture.\n[mipi_cam-1]\n[mipi_cam-1] [WARN] [1726658126.456074125] [mipi_cam]: this board support mipi:\n[mipi_cam-1] [WARN] [1726658126.456274529] [mipi_cam]: host 0\n[mipi_cam-1] [WARN] [1726658126.456333567] [mipi_cam]: host 2\n[mipi_cam-1] [WARN] [1726658128.722451045] [mipi_cam]: [init]->cap default init success.\n[mipi_cam-1]\n...\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"To view the dual camera image on the web, as raw data needs to be encoded into JPEG images, need to be coded Jpeg image node,  and one for publishing with a webservice node."}),"\n",(0,t.jsx)(r.A,{groupId:"tros-distro",children:(0,t.jsx)(a.A,{value:"humble",label:"Humble",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Configure the tros.b environment\nsource /opt/tros/humble/setup.bash\n"})})})}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"# Start the launch file\nros2 launch mipi_cam mipi_cam_dual_channel_websocket.launch.py\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Open a web browser on the PC (Chrome/Firefox/Edge) and enter  ",(0,t.jsx)(n.code,{children:"http://IP:8000"})," (IP address of the RDK) to see the real-time display of the dual camera's output.\n",(0,t.jsx)(n.img,{alt:"web-dualcamera-codec",src:s(96692).A+"",title:"Real-time image",width:"1920",height:"929"})]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"caution-1",children:"Caution"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Caution when plugging/unplugging the camera:"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"NEVER plug or unplug the camera module without powering off the development board first. Otherwise, it may result in damaging the camera module."})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"If you encounter any issues with the startup of the hobot_sensor node, you can troubleshoot the problems by following these steps:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Check the hardware connections."}),"\n",(0,t.jsx)(n.li,{children:"Make sure you have set up the tros.b environment."}),"\n",(0,t.jsx)(n.li,{children:"Verify the parameters are correct, for more details refer to the Hobot_Sensors README.md file."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"rgbd-camera",children:"RGBD camera"}),"\n",(0,t.jsx)(n.h3,{id:"introduction-3",children:"Introduction"}),"\n",(0,t.jsx)(n.p,{children:"In order to achieve environmental perception capability, robot products usually carry cameras, ToF and other types of sensors. To reduce the cost of sensor adaptation and usage for users, TogetheROS.Bot encapsulates and abstracts multiple commonly used sensors into the hobot_sensor module, which supports ROS standard image messages, custom image message output, and camera calibration data publishing. Currently supported types of RGBD sensors are as follows:"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Type"}),(0,t.jsx)(n.th,{children:"Model"}),(0,t.jsx)(n.th,{children:"Specification"}),(0,t.jsx)(n.th,{children:"Supported Platforms"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"Camera"}),(0,t.jsx)(n.td,{children:"CP3AM"}),(0,t.jsx)(n.td,{children:"200W"}),(0,t.jsx)(n.td,{children:"RDK X3"})]})})]}),"\n",(0,t.jsxs)(n.p,{children:["Code Repository:  (",(0,t.jsx)(n.a,{href:"https://github.com/D-Robotics/hobot_rgbd_cam.git",children:"https://github.com/D-Robotics/hobot_rgbd_cam.git"}),")"]}),"\n",(0,t.jsx)(n.h3,{id:"supported-platforms-3",children:"Supported Platforms"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Platform"}),(0,t.jsx)(n.th,{children:"System"}),(0,t.jsx)(n.th,{children:"Function"})]})}),(0,t.jsx)(n.tbody,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:"RDK X3"}),(0,t.jsx)(n.td,{children:"Ubuntu 20.04 (Foxy), Ubuntu 22.04 (Humble)"}),(0,t.jsx)(n.td,{children:"Start RGBD camera and preview RGB and depth images on PC using rviz2"})]})})]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Note: Only supports RDK X3, RDK X3 Module is not supported yet."})}),"\n",(0,t.jsx)(n.h3,{id:"preparations",children:"Preparations"}),"\n",(0,t.jsx)(n.h4,{id:"rdk-platform-2",children:"RDK Platform"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Make sure the camera is correctly connected to the RDK. The connection for RGBD module to RDK X3 is shown as below:"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"hobot_rgbd",src:s(92059).A+"",width:"2736",height:"2839"})}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Note: The RGBD module needs an additional adapter board to connect to RDK X3"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"RDK has been flashed with the  Ubuntu 20.04/22.04 system image provided by D-Robotics."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"RDK has successfully installed tros.b."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Make sure the PC can access the RDK through the network."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Install ros2 foxy version and rviz2 on the PC, using the following command:"}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"  sudo apt install ros-foxy-rviz-common ros-foxy-rviz-default-plugins ros-foxy-rviz2\n"})}),"\n",(0,t.jsx)(n.h3,{id:"usage-2",children:"Usage"}),"\n",(0,t.jsx)(n.h4,{id:"rdk-3",children:"RDK"}),"\n",(0,t.jsx)(n.p,{children:"Taking CP3AM as an example, the method of acquiring and previewing camera data is introduced below:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"SSH into the RDK and start the hobot_sensor node with the following command:"}),"\n",(0,t.jsxs)(r.A,{groupId:"tros-distro",children:[(0,t.jsx)(a.A,{value:"foxy",label:"Foxy",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Configure the tros.b environment\nsource /opt/tros/setup.bash\n"})})}),(0,t.jsx)(a.A,{value:"humble",label:"Humble",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"# Configure the tros.b environment\nsource /opt/tros/humble/setup.bash\n"})})})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"cp -r /opt/tros/lib/rgbd_sensor/parameter .\n# Launch the node\nros2 launch rgbd_sensor rgbd_sensor.launch.py\n"})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"If the program outputs the following information, it indicates that the node has been successfully launched:"}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:'[WARN] [1654573498.706920307] [example]: [wuwl]->This is rgbd!\nsh: 1: echo: echo: I/O error\npipeId[1], mipiIdx[1], vin_vps_mode[3]\n[ERROR]["LOG"][irs2381c_utility.c:192] 2381 enter sensor_init_setting\n[ERROR]["LOG"][irs2381c_utility.c:200] start write 2381c reg\ncamera read reg: 0xa001 val:0x7\n...\n[ERROR]["LOG"][irs2381c_utility.c:207] end write 2381c reg\nHB_MIPI_InitSensor end\nHB_MIPI_SetDevAttr end\npstHbVideoDev->vin_fd = 29\nsensorID: 634-2362-2676-68d0 \nfind local calib_file\n\nfind local calib_file\n\nSDK Version: V4.4.35 build 20220525 09:27:53.\nread file(./calib-0634-2362-2676-68d0.bin), ok, file_len=132096, read_len=132096.......\nmodule config file(user custom) is: ./parameter/T00P11A-17.ini.\nparse calib data, data len:132096...\nsunny_degzip2 decode_len=155575.\ncalib data with crc.\nparse calib data, ok.\nmax roi (firstly): (0, 224, 0, 128).\ncur roi (firstly): (0, 224, 0, 128).\nHB_MIPI_InitSensor end\nHB_MIPI_SetDevAttr end\npstHbVideoDev->vin_fd = 55\nvencChnAttr.stRcAttr.enRcMode=11\nmmzAlloc paddr = 0x1a6e6000, vaddr = 0x917e1000\ncamera read reg: 0x9400 val:0x1\n...\n\n[wuwl-StartCamera]->camT=3, ret=0.\ncamera read reg: 0x3e val:0x40\n[ERROR]["vio_devop"][utils/dev_ioctl.c:121] [499334.399304]dev_node_dqbuf_ispoll[121]: failed to ioctl: dq (14 - Bad address)\n[ERROR]["vio_devop"][utils/dev_ioctl.c:189] [499334.399355]entity_node_dqbuf_ispoll[189]: dev type(9) dq failed\n\n[ERROR]["vio_core"][commom_grp/binding_main.c:1034] [499334.399371]comm_dq_no_data[1034]: G1 MIPI_SIF_MODULE module chn0 dq failed! maybe framedrop error_detail -14\n```[wuwl-StartCamera]->camT=1, ret=0.\n[INFO] [1654573500.226606117] [rclcpp]: [childStart]-> ret=0 !\n\n[INFO] [1654573500.226831567] [rclcpp]: [StartStream]->pthread create sucess\n\n[INFO] [1654573500.226963854] [rclcpp]: <========>[doCapStreamLoop]->Start.\n\n[WARN] [1654573500.226998103] [rgbd_node]: [RgbdNode]->mipinode init sucess.\n\n[WARN] [1654573500.227352507] [example]: [wuwl]->rgbd init!\n[WARN] [1654573500.228502174] [example]: [wuwl]->rgbd add_node!\n\n[INFO] [1662723985.860666547] [rgbd_node]: publish camera info.\n[INFO] [1662723985.866077156] [rgbd_node]: [pub_ori_pcl]->pub pcl w:h=24192:1,nIdx-24192:sz=24192.\n[INFO] [1662723985.876428980] [rgbd_node]: [timer_ros_pub]->pub dep w:h=224:129,sz=982464, infra w:h=224:108, sz=24192.\n\n[INFO] [1662723985.946767230] [rgbd_node]: publish camera info.\n[INFO] [1662723985.951415418] [rgbd_node]: [pub_ori_pcl]->pub pcl w:h=24192:1,nIdx-24192:sz=24192.\n[INFO] [1662723985.960161280] [rgbd_node]: [timer_ros_pub]->pub dep w:h=224:129,sz=982464, infra w:h=224:108, sz=24192.\n...\n\n'})}),"\n",(0,t.jsxs)(n.ol,{start:"3",children:["\n",(0,t.jsx)(n.li,{children:"Query the current topic on the PC, and the command are as follows:"}),"\n"]}),"\n",(0,t.jsxs)(r.A,{groupId:"tros-distro",children:[(0,t.jsx)(a.A,{value:"foxy",label:"Foxy",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"source /opt/ros/foxy/setup.bash\n"})})}),(0,t.jsx)(a.A,{value:"humble",label:"Humble",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"source /opt/ros/humble/setup.bash\n"})})})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"ros2 topic list\n"})}),"\n",(0,t.jsx)(n.p,{children:"The result are as follows:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:"/rgbd_CP3AM/depth/image_rect_raw\n\n/rgbd_CP3AM/depth/color/points\n\n/rgbd_CP3AM/color/camera_info\n\n/rgbd_CP3AM/aligned_depth_to_color/color/points\n\n/rgbd_CP3AM/infra/image_rect_raw\n\n/rgbd_CP3AM/color/image_rect_raw\n\n/parameter_events\n\n/rosout\n"})}),"\n",(0,t.jsxs)(n.ol,{start:"4",children:["\n",(0,t.jsx)(n.li,{children:"Subscribe to topics and preview camera data on a PC."}),"\n"]}),"\n",(0,t.jsxs)(r.A,{groupId:"tros-distro",children:[(0,t.jsx)(a.A,{value:"foxy",label:"Foxy",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"source /opt/ros/foxy/setup.bash\n"})})}),(0,t.jsx)(a.A,{value:"humble",label:"Humble",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"source /opt/ros/humble/setup.bash\n"})})})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"ros2 run rviz2 rviz2\n"})}),"\n",(0,t.jsx)(n.p,{children:'Click the "add" button in the rviz2 interface to add topics published by rgbd_sensor (refer to the rgbd_CP3AM related topics indicated in section 3). To subscribe to point cloud data, modify the "Fixed Frame" option in the Global Options of rviz2 configuration to "depth". Then you can view real-time point cloud information. In the point topic configuration, select "points" as the point type.'}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"hobot_rgbd_sensor",src:s(21802).A+"",title:"Real-time Image",width:"1920",height:"1080"})}),"\n",(0,t.jsxs)(n.ol,{start:"5",children:["\n",(0,t.jsx)(n.li,{children:"Query camera intrinsics on a PC."}),"\n"]}),"\n",(0,t.jsxs)(r.A,{groupId:"tros-distro",children:[(0,t.jsx)(a.A,{value:"foxy",label:"Foxy",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"source /opt/ros/foxy/setup.bash\n"})})}),(0,t.jsx)(a.A,{value:"humble",label:"Humble",children:(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-shell",children:"source /opt/ros/humble/setup.bash\n"})})})]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"ros2 topic echo /rgbd_CP3AM/color/camera_info\n"})}),"\n",(0,t.jsx)(n.p,{children:"The output result is as follows:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-text",children:" header:\n stamp:\n     sec: 119811\n     nanosec: 831645108\n frame_id: color\n height: 1080\n width: 1920\n distortion_model: plumb_bob\n d:\n - -0.32267\n - 0.083221\n - 0.000164\n - -0.002134\n - 0.0\n k:\n - 1066.158339\n - 0.0\n - 981.393777\n - 0.0\n - 1068.659998\n - 545.569587\n - 0.0\n - 0.0\n - 1.0\n r:\n - 1.0\n - 0.0\n - 0.0```\n- 0.0\n- 1.0\n- 0.0\n- 0.0\n- 0.0\n- 1.0\np:\n- 741.315308\n- 0.0\n- 968.865379\n- 0.0\n- 0.0\n- 969.43042\n- 546.524343\n- 0.0\n- 0.0\n- 0.0\n- 1.0\n- 0.0\nbinning_x: 0\nbinning_y: 0\nroi:\nx_offset: 0\ny_offset: 0\nheight: 0\nwidth: 0\ndo_rectify: false\n"})}),"\n",(0,t.jsx)(n.h3,{id:"instructions",children:"Instructions"}),"\n",(0,t.jsx)(n.p,{children:"If there is an abnormality in the startup of the hobot_sensor node, you can troubleshoot the problem using the following steps:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Check hardware connections."}),"\n",(0,t.jsx)(n.li,{children:"Check if the tros.b environment is set."}),"\n",(0,t.jsx)(n.li,{children:"Check if the parameters are correct. For specific details, please refer to the Hobot_Sensors README.md file."}),"\n"]})]})}function m(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}},19365:(e,n,s)=>{s.d(n,{A:()=>a});s(96540);var t=s(34164);const o={tabItem:"tabItem_Ymn6"};var r=s(74848);function a(e){let{children:n,hidden:s,className:a}=e;return(0,r.jsx)("div",{role:"tabpanel",className:(0,t.A)(o.tabItem,a),hidden:s,children:n})}},93859:(e,n,s)=>{s.d(n,{A:()=>y});var t=s(96540),o=s(34164),r=s(86641),a=s(56347),i=s(205),l=s(38874),c=s(24035),d=s(82993);function h(e){return t.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,t.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(e){const{values:n,children:s}=e;return(0,t.useMemo)((()=>{const e=n??function(e){return h(e).map((e=>{let{props:{value:n,label:s,attributes:t,default:o}}=e;return{value:n,label:s,attributes:t,default:o}}))}(s);return function(e){const n=(0,c.X)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,s])}function m(e){let{value:n,tabValues:s}=e;return s.some((e=>e.value===n))}function b(e){let{queryString:n=!1,groupId:s}=e;const o=(0,a.W6)(),r=function(e){let{queryString:n=!1,groupId:s}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!s)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return s??null}({queryString:n,groupId:s});return[(0,l.aZ)(r),(0,t.useCallback)((e=>{if(!r)return;const n=new URLSearchParams(o.location.search);n.set(r,e),o.replace({...o.location,search:n.toString()})}),[r,o])]}function p(e){const{defaultValue:n,queryString:s=!1,groupId:o}=e,r=u(e),[a,l]=(0,t.useState)((()=>function(e){let{defaultValue:n,tabValues:s}=e;if(0===s.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!m({value:n,tabValues:s}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${s.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const t=s.find((e=>e.default))??s[0];if(!t)throw new Error("Unexpected error: 0 tabValues");return t.value}({defaultValue:n,tabValues:r}))),[c,h]=b({queryString:s,groupId:o}),[p,x]=function(e){let{groupId:n}=e;const s=function(e){return e?`docusaurus.tab.${e}`:null}(n),[o,r]=(0,d.Dv)(s);return[o,(0,t.useCallback)((e=>{s&&r.set(e)}),[s,r])]}({groupId:o}),g=(()=>{const e=c??p;return m({value:e,tabValues:r})?e:null})();(0,i.A)((()=>{g&&l(g)}),[g]);return{selectedValue:a,selectValue:(0,t.useCallback)((e=>{if(!m({value:e,tabValues:r}))throw new Error(`Can't select invalid tab value=${e}`);l(e),h(e),x(e)}),[h,x,r]),tabValues:r}}var x=s(92303);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var _=s(74848);function j(e){let{className:n,block:s,selectedValue:t,selectValue:a,tabValues:i}=e;const l=[],{blockElementScrollPositionUntilNextRender:c}=(0,r.a_)(),d=e=>{const n=e.currentTarget,s=l.indexOf(n),o=i[s].value;o!==t&&(c(n),a(o))},h=e=>{let n=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const s=l.indexOf(e.currentTarget)+1;n=l[s]??l[0];break}case"ArrowLeft":{const s=l.indexOf(e.currentTarget)-1;n=l[s]??l[l.length-1];break}}n?.focus()};return(0,_.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.A)("tabs",{"tabs--block":s},n),children:i.map((e=>{let{value:n,label:s,attributes:r}=e;return(0,_.jsx)("li",{role:"tab",tabIndex:t===n?0:-1,"aria-selected":t===n,ref:e=>l.push(e),onKeyDown:h,onClick:d,...r,className:(0,o.A)("tabs__item",g.tabItem,r?.className,{"tabs__item--active":t===n}),children:s??n},n)}))})}function f(e){let{lazy:n,children:s,selectedValue:o}=e;const r=(Array.isArray(s)?s:[s]).filter(Boolean);if(n){const e=r.find((e=>e.props.value===o));return e?(0,t.cloneElement)(e,{className:"margin-top--md"}):null}return(0,_.jsx)("div",{className:"margin-top--md",children:r.map(((e,n)=>(0,t.cloneElement)(e,{key:n,hidden:e.props.value!==o})))})}function v(e){const n=p(e);return(0,_.jsxs)("div",{className:(0,o.A)("tabs-container",g.tabList),children:[(0,_.jsx)(j,{...n,...e}),(0,_.jsx)(f,{...n,...e})]})}function y(e){const n=(0,x.A)();return(0,_.jsx)(v,{...e,children:h(e.children)},String(n))}},91857:(e,n,s)=>{s.d(n,{A:()=>t});const t=s.p+"assets/images/F37-b94a06743c4ee4117f5da567ae77f66b.jpg"},16896:(e,n,s)=>{s.d(n,{A:()=>t});const t=s.p+"assets/images/GC4663-63e022d8404b3994e5eafd85ada0d640.jpg"},68379:(e,n,s)=>{s.d(n,{A:()=>t});const t=s.p+"assets/images/IMX219-8dcf9228baeb190050f3d24750b0d0f7.jpg"},99505:(e,n,s)=>{s.d(n,{A:()=>t});const t=s.p+"assets/images/IMX477-2398407798558416723ce835ce879843.jpg"},10752:(e,n,s)=>{s.d(n,{A:()=>t});const t=s.p+"assets/images/OV5647-d889025c27236f33fd09828039ecc918.jpg"},92059:(e,n,s)=>{s.d(n,{A:()=>t});const t=s.p+"assets/images/hobot_rgbd-408e0d7bda71b3297f33c22e4133bfe6.png"},21802:(e,n,s)=>{s.d(n,{A:()=>t});const t=s.p+"assets/images/hobot_rgbd_sensor-11ecb58fcec3ac8ea15c71d169529d45.png"},39382:(e,n,s)=>{s.d(n,{A:()=>t});const t=s.p+"assets/images/image-X3-PI-Camera-3e9b3c6e20aa63b5cae2ef3a26deeef5.png"},35234:(e,n,s)=>{s.d(n,{A:()=>t});const t=s.p+"assets/images/image-X5-PI-DualCamera-40e6ca75502db45a470b1e21e34b429c.jpg"},97214:(e,n,s)=>{s.d(n,{A:()=>t});const t=s.p+"assets/images/usb_cam_pic-7bef9ef64c1ec1b4df6bd6161d9a0507.png"},96692:(e,n,s)=>{s.d(n,{A:()=>t});const t=s.p+"assets/images/web-dualcamera-codec-12ee6f3c30e5bdb650d5dcde089de1d8.jpg"},99001:(e,n,s)=>{s.d(n,{A:()=>t});const t=s.p+"assets/images/web-f37-codec-7bef9ef64c1ec1b4df6bd6161d9a0507.png"},28453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>i});var t=s(96540);const o={},r=t.createContext(o);function a(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);