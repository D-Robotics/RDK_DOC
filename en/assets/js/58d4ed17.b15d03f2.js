"use strict";(self.webpackChunkrdk_doc=self.webpackChunkrdk_doc||[]).push([[4655],{8059:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>p,frontMatter:()=>o,metadata:()=>d,toc:()=>c});var t=i(74848),s=i(28453);const o={sidebar_position:1},r="3.3.1 Pin Configuration and Definition",d={id:"Basic_Application/03_40pin_user_guide/40pin_define",title:"3.3.1 Pin Configuration and Definition",description:"For the 40-pin on the development board, please refer to the 40-Pin GPIO Definition section for interface definitions.",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/03_Basic_Application/03_40pin_user_guide/40pin_define.md",sourceDirName:"03_Basic_Application/03_40pin_user_guide",slug:"/Basic_Application/03_40pin_user_guide/40pin_define",permalink:"/rdk_doc/en/Basic_Application/03_40pin_user_guide/40pin_define",draft:!1,unlisted:!1,editUrl:"https://github.com/D-Robotics/rdk_doc/blob/main/docs/03_Basic_Application/03_40pin_user_guide/40pin_define.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"3.2.3 RDK X5 Series Audio Guide",permalink:"/rdk_doc/en/Basic_Application/audio/audio_board_x5"},next:{title:"3.3.2 Using GPIO",permalink:"/rdk_doc/en/Basic_Application/03_40pin_user_guide/gpio"}},a={},c=[{value:"Pin Multiplexing Configuration",id:"pin-multiplexing-configuration",level:2},{value:"Navigation Instructions",id:"navigation-instructions",level:4},{value:"40-Pin Definition",id:"40pin_define",level:2},{value:"GPIO Read/Write Operation Example",id:"gpio-readwrite-operation-example",level:2},{value:"Environment Setup",id:"environment-setup",level:3},{value:"Execution Steps",id:"execution-steps",level:3},{value:"Expected Output",id:"expected-output",level:2}];function l(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"331-pin-configuration-and-definition",children:"3.3.1 Pin Configuration and Definition"}),"\n",(0,t.jsxs)(n.p,{children:["For the 40-pin on the development board, please refer to the ",(0,t.jsx)(n.a,{href:"./40pin_define",children:"40-Pin GPIO Definition"})," section for interface definitions."]}),"\n",(0,t.jsx)(n.h2,{id:"pin-multiplexing-configuration",children:"Pin Multiplexing Configuration"}),"\n",(0,t.jsxs)(n.p,{children:["The 40-pin are enabled with default configurations for UART, SPI, I2C, I2S, and other dedicated functions as shown in the ",(0,t.jsx)(n.a,{href:"#40pin_define",children:"40-Pin GPIO Definition"}),". If you want to configure specific pins as GPIO, you need to use the ",(0,t.jsx)(n.code,{children:"srpi-config"})," graphical configuration tool."]}),"\n",(0,t.jsxs)(n.p,{children:["Note that the ",(0,t.jsx)(n.code,{children:"srpi-config"})," program needs to run in a ",(0,t.jsx)(n.strong,{children:"full-screen command-line window"}),". Perform the following steps:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"sudo srpi-config\n"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"image-20220511173307239",src:i(88003).A+"",width:"648",height:"368"})}),"\n",(0,t.jsxs)(n.p,{children:["After selecting ",(0,t.jsx)(n.code,{children:"3 Interface Options"})," -> ",(0,t.jsx)(n.code,{children:"I3 Peripheral bus config"}),", you will enter the following bus configuration interface:"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"I3 Peripheral Bus Config",src:i(86148).A+"",width:"648",height:"368"})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsxs)(n.strong,{children:[(0,t.jsx)(n.code,{children:"okay"}),":"]})," Configures the corresponding pin for its dedicated function."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsxs)(n.strong,{children:[(0,t.jsx)(n.code,{children:"disabled"}),":"]})," Disables the pin's dedicated function, allowing it to be used as a GPIO."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Note:"})," Configuration changes take effect ",(0,t.jsx)(n.strong,{children:"after a restart"}),"."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"navigation-instructions",children:"Navigation Instructions"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Use ",(0,t.jsx)(n.strong,{children:"Up/Down keys"})," on the keyboard to select a function item, press ",(0,t.jsx)(n.strong,{children:"Enter"})," to toggle the function."]}),"\n",(0,t.jsxs)(n.li,{children:["Use ",(0,t.jsx)(n.strong,{children:"Left/Right keys"})," on the keyboard to choose between ",(0,t.jsx)(n.code,{children:"Select"})," and ",(0,t.jsx)(n.code,{children:"Exit"}),", press ",(0,t.jsx)(n.strong,{children:"Enter"})," to confirm."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"40pin_define",children:"40-Pin Definition"}),"\n",(0,t.jsxs)(n.p,{children:["The development board provides a 40-pin standard interface for convenient peripheral expansion. The digital I/Os use a 3.3V voltage level. The pin definitions for the 40-pin interface are as follows:\n",(0,t.jsx)(n.img,{alt:"image-20220828203147852",src:i(92395).A+"",width:"1391",height:"767"})]}),"\n",(0,t.jsx)(n.p,{children:"The development board has silk screen markings on the 40-pin interface to facilitate operation. The locations of PIN1 and PIN40 are as follows:"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"image-20220828203207798",src:i(80475).A+"",width:"1280",height:"909"})}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsx)(n.p,{children:"The RDK X3 Module provides the 40-pin GPIOs and their definitions as follows:"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"image-20230510155124570",src:i(59904).A+"",width:"2475",height:"792"})}),"\n",(0,t.jsx)(n.admonition,{type:"info",children:(0,t.jsx)(n.p,{children:"The RDK Ultra provides the 40-pin GPIOs and their definitions as follows:"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"image-20230510155124570",src:i(23420).A+"",width:"1908",height:"1032"})}),"\n",(0,t.jsx)(n.h2,{id:"gpio-readwrite-operation-example",children:"GPIO Read/Write Operation Example"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Video Reference:"})," ",(0,t.jsx)(n.a,{href:"https://www.bilibili.com/video/BV1rm4y1E73q/?p=16",children:"Watch on Bilibili"})]}),"\n",(0,t.jsxs)(n.p,{children:["The development board includes various 40PIN pin function test codes in the ",(0,t.jsx)(n.code,{children:"/app/40pin_samples/"})," directory, such as GPIO input/output testing, PWM, I2C, SPI, and UART tests. All test programs are written in Python. Detailed information about each module can be found in other sections of this chapter."]}),"\n",(0,t.jsxs)(n.p,{children:["For example, in ",(0,t.jsx)(n.code,{children:"/app/40pin_samples/button_led.py"}),", the program configures pin ",(0,t.jsx)(n.code,{children:"37"})," as input and pin ",(0,t.jsx)(n.code,{children:"36"})," as output. The output state of pin ",(0,t.jsx)(n.code,{children:"36"})," is controlled based on the input state of pin ",(0,t.jsx)(n.code,{children:"37"}),"."]}),"\n",(0,t.jsx)(n.h3,{id:"environment-setup",children:"Environment Setup"}),"\n",(0,t.jsxs)(n.p,{children:["Use Dupont wires to connect pin ",(0,t.jsx)(n.code,{children:"37"})," to 3.3V or GND to control its voltage level."]}),"\n",(0,t.jsx)(n.h3,{id:"execution-steps",children:"Execution Steps"}),"\n",(0,t.jsxs)(n.p,{children:["Run the ",(0,t.jsx)(n.code,{children:"button_led.py"})," program to start the GPIO read/write operation:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"sunrise@ubuntu:~$ cd /app/40pin_samples/\nsunrise@ubuntu:/app/40pin_samples$ sudo python3 ./button_led.py\n"})}),"\n",(0,t.jsx)(n.h2,{id:"expected-output",children:"Expected Output"}),"\n",(0,t.jsxs)(n.p,{children:["By controlling the voltage level of pin ",(0,t.jsx)(n.code,{children:"37"}),", the output level of pin ",(0,t.jsx)(n.code,{children:"36"})," will change accordingly."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"sunrise@ubuntu:/app/40pin_samples$ sudo python3 ./button_led.py\nStarting demo now! Press CTRL+C to exit\nOutputting 0 to Pin 36\nOutputting 1 to Pin 36\nOutputting 0 to Pin 36\n"})})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},23420:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/image-20230830194924570-e4bc5edda2b16227691ecc3208710e72.png"},28453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>d});var t=i(96540);const s={},o=t.createContext(s);function r(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(o.Provider,{value:n},e.children)}},59904:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/image-20230510155124570-b12a883adbc66f9b8291891f569921ea.png"},80475:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/image-20220828203207798-e44476acea26d3e99da2f1da6ea5d6aa.jpg"},86148:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/image-20240817195940261-f58a8a032f807e495b355b80e839a6af.png"},88003:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/image-20220511173307239-d7276a7323353449727270e37faba200.png"},92395:(e,n,i)=>{i.d(n,{A:()=>t});const t=i.p+"assets/images/image-20220828203147852-201c4eb31f1a6c8aedd146acb8f2f5e9.png"}}]);