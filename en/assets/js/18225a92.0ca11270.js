"use strict";(self.webpackChunkrdk_doc=self.webpackChunkrdk_doc||[]).push([[8891],{28453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>r});var c=i(96540);const d={},t=c.createContext(d);function o(e){const n=c.useContext(t);return c.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(d):e.components||d:o(e.components),c.createElement(t.Provider,{value:n},e.children)}},76885:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>t,metadata:()=>r,toc:()=>s});var c=i(74848),d=i(28453);const t={sidebar_position:2},o="Encoder Object",r={id:"Basic_Application/multi_media/multi_media_api/pydev_multimedia_api_x3/object_encoder",title:"Encoder Object",description:"The Encoder object implements encoding and compression functions for video data. It includes several methods, such as encode, encodefile, getimg, close, etc. The detailed explanation is as follows:",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/03_Basic_Application/04_multi_media/multi_media_api/pydev_multimedia_api_x3/object_encoder.md",sourceDirName:"03_Basic_Application/04_multi_media/multi_media_api/pydev_multimedia_api_x3",slug:"/Basic_Application/multi_media/multi_media_api/pydev_multimedia_api_x3/object_encoder",permalink:"/rdk_doc/en/Basic_Application/multi_media/multi_media_api/pydev_multimedia_api_x3/object_encoder",draft:!1,unlisted:!1,editUrl:"https://github.com/D-Robotics/rdk_doc/blob/main/docs/03_Basic_Application/04_multi_media/multi_media_api/pydev_multimedia_api_x3/object_encoder.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Camera Object",permalink:"/rdk_doc/en/Basic_Application/multi_media/multi_media_api/pydev_multimedia_api_x3/object_camera"},next:{title:"Decoder Object",permalink:"/rdk_doc/en/Basic_Application/multi_media/multi_media_api/pydev_multimedia_api_x3/object_decoder"}},l={},s=[{value:"encode",id:"encode",level:2},{value:"encode_file",id:"encode_file",level:2},{value:"get_img",id:"get_img",level:2},{value:"close",id:"close",level:2}];function a(e){const n={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,d.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(n.h1,{id:"encoder-object",children:"Encoder Object"}),"\n",(0,c.jsxs)(n.p,{children:["The Encoder object implements encoding and compression functions for video data. It includes several methods, such as ",(0,c.jsx)(n.code,{children:"encode"}),", ",(0,c.jsx)(n.code,{children:"encode_file"}),", ",(0,c.jsx)(n.code,{children:"get_img"}),", ",(0,c.jsx)(n.code,{children:"close"}),", etc. The detailed explanation is as follows:"]}),"\n",(0,c.jsx)(n.h2,{id:"encode",children:"encode"}),"\n",(0,c.jsx)("font",{color:"Blue",children:"\u3010Function Description\u3011"}),"\n",(0,c.jsx)(n.p,{children:"Configure and enable the encode encoding module."}),"\n",(0,c.jsx)("font",{color:"Blue",children:"\u3010Function Declaration\u3011"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-python",children:"Encoder.encode(video_chn, encode_type , width, height, bits)\n"})}),"\n",(0,c.jsx)("font",{color:"Blue",children:"\u3010Parameter Description\u3011"}),"\n",(0,c.jsxs)(n.table,{children:[(0,c.jsx)(n.thead,{children:(0,c.jsxs)(n.tr,{children:[(0,c.jsx)(n.th,{children:"Parameter Name"}),(0,c.jsx)(n.th,{children:"Description"}),(0,c.jsx)(n.th,{children:"Value Range"})]})}),(0,c.jsxs)(n.tbody,{children:[(0,c.jsxs)(n.tr,{children:[(0,c.jsx)(n.td,{children:"video_chn"}),(0,c.jsx)(n.td,{children:"Specifies the channel number of the video encoder"}),(0,c.jsx)(n.td,{children:"Range: 0~31"})]}),(0,c.jsxs)(n.tr,{children:[(0,c.jsx)(n.td,{children:"encode_type"}),(0,c.jsx)(n.td,{children:"Video encoding type"}),(0,c.jsxs)(n.td,{children:["Range: 1~3, corresponding to ",(0,c.jsx)(n.code,{children:"H264"}),", ",(0,c.jsx)(n.code,{children:"H265"}),", ",(0,c.jsx)(n.code,{children:"MJPEG"})," respectively"]})]}),(0,c.jsxs)(n.tr,{children:[(0,c.jsx)(n.td,{children:"width"}),(0,c.jsx)(n.td,{children:"Width of the image input to the encoding module"}),(0,c.jsx)(n.td,{children:"Not exceeding 4096"})]}),(0,c.jsxs)(n.tr,{children:[(0,c.jsx)(n.td,{children:"height"}),(0,c.jsx)(n.td,{children:"Height of the image input to the encoding module"}),(0,c.jsx)(n.td,{children:"Not exceeding 4096"})]}),(0,c.jsxs)(n.tr,{children:[(0,c.jsx)(n.td,{children:"bits"}),(0,c.jsx)(n.td,{children:"Bitrate of the encoding module"}),(0,c.jsx)(n.td,{children:"Default: 8000kbps"})]})]})]}),"\n",(0,c.jsx)("font",{color:"Blue",children:"\u3010Usage\u3011"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-python",children:"#create encode object\nencode = libsrcampy.Encoder()\n\n#enable encode channel 0, solution: 1080p, format: H264\nret = encode.encode(0, 1, 1920, 1080)\n"})}),"\n",(0,c.jsx)("font",{color:"Blue",children:"\u3010Return Value\u3011"}),"\n",(0,c.jsxs)(n.table,{children:[(0,c.jsx)(n.thead,{children:(0,c.jsxs)(n.tr,{children:[(0,c.jsx)(n.th,{children:"Return value"}),(0,c.jsx)(n.th,{children:"Definition"})]})}),(0,c.jsxs)(n.tbody,{children:[(0,c.jsxs)(n.tr,{children:[(0,c.jsx)(n.td,{children:"0"}),(0,c.jsx)(n.td,{children:"Success"})]}),(0,c.jsxs)(n.tr,{children:[(0,c.jsx)(n.td,{children:"-1"}),(0,c.jsx)(n.td,{children:"Failure"})]})]})]}),"\n",(0,c.jsx)("font",{color:"Blue",children:"\u3010Notes\u3011"}),"\n",(0,c.jsx)(n.p,{children:"None"}),"\n",(0,c.jsx)("font",{color:"Blue",children:"\u3010Reference Code\u3011"}),"\n",(0,c.jsx)(n.p,{children:"None"}),"\n",(0,c.jsx)(n.h2,{id:"encode_file",children:"encode_file"}),"\n",(0,c.jsx)("font",{color:"Blue",children:"\u3010Function Description\u3011"}),"\n",(0,c.jsx)(n.p,{children:"Feeds image files into enabled encoding channels and encodes them according to a predetermined format."}),"\n",(0,c.jsx)("font",{color:"Blue",children:"\u3010Function Declaration\u3011"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-python",children:"Encoder.encode_file(img)\n"})}),"\n",(0,c.jsx)("font",{color:"Blue",children:"\u3010Parameter Description\u3011"}),"\n",(0,c.jsxs)(n.table,{children:[(0,c.jsx)(n.thead,{children:(0,c.jsxs)(n.tr,{children:[(0,c.jsx)(n.th,{children:"Parameter Name"}),(0,c.jsx)(n.th,{children:"Description"}),(0,c.jsx)(n.th,{children:"Value Range"})]})}),(0,c.jsx)(n.tbody,{children:(0,c.jsxs)(n.tr,{children:[(0,c.jsx)(n.td,{children:"img"}),(0,c.jsx)(n.td,{children:"Image data to be encoded, in NV12 format"}),(0,c.jsx)(n.td,{children:"N/A"})]})})]}),"\n",(0,c.jsx)("font",{color:"Blue",children:"\u3010Usage Example\u3011"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-python",children:'fin = open("output.img", "rb")\ninput_img = fin.read()\nfin.close()\n\n# Input image data for encoding\nret = encode.encode_file(input_img)\n'})}),"\n",(0,c.jsx)("font",{color:"Blue",children:"\u3010Return Values\u3011"}),"\n",(0,c.jsxs)(n.table,{children:[(0,c.jsx)(n.thead,{children:(0,c.jsxs)(n.tr,{children:[(0,c.jsx)(n.th,{children:"Return Value"}),(0,c.jsx)(n.th,{children:"Definition Description"})]})}),(0,c.jsxs)(n.tbody,{children:[(0,c.jsxs)(n.tr,{children:[(0,c.jsx)(n.td,{children:"0"}),(0,c.jsx)(n.td,{children:"Success"})]}),(0,c.jsxs)(n.tr,{children:[(0,c.jsx)(n.td,{children:"-1"}),(0,c.jsx)(n.td,{children:"Failure"})]})]})]}),"\n",(0,c.jsx)("font",{color:"Blue",children:"\u3010Notes\u3011"}),"\n",(0,c.jsx)(n.p,{children:"None"}),"\n",(0,c.jsx)("font",{color:"Blue",children:"\u3010Reference Code\u3011"}),"\n",(0,c.jsx)(n.p,{children:"None"}),"\n",(0,c.jsx)(n.h2,{id:"get_img",children:"get_img"}),"\n",(0,c.jsx)("font",{color:"blue",children:"\u3010Function Description\u3011"}),"\n",(0,c.jsx)(n.p,{children:"Get encoded data."}),"\n",(0,c.jsx)("font",{color:"blue",children:"\u3010Function Declaration\u3011"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-python",children:"Encoder.get_img()\n"})}),"\n",(0,c.jsx)("font",{color:"blue",children:"\u3010Usage\u3011"}),"\n",(0,c.jsx)(n.p,{children:"N/A"}),"\n",(0,c.jsx)("font",{color:"blue",children:"\u3010Parameter Description\u3011"}),"\n",(0,c.jsx)(n.p,{children:"N/A"}),"\n",(0,c.jsx)("font",{color:"blue",children:"\u3010Return Value\u3011"}),"\n",(0,c.jsxs)(n.table,{children:[(0,c.jsx)(n.thead,{children:(0,c.jsxs)(n.tr,{children:[(0,c.jsx)(n.th,{children:"Return Value"}),(0,c.jsx)(n.th,{children:"Definition"})]})}),(0,c.jsxs)(n.tbody,{children:[(0,c.jsxs)(n.tr,{children:[(0,c.jsx)(n.td,{children:"0"}),(0,c.jsx)(n.td,{children:"Success"})]}),(0,c.jsxs)(n.tr,{children:[(0,c.jsx)(n.td,{children:"-1"}),(0,c.jsx)(n.td,{children:"Failure"})]})]})]}),"\n",(0,c.jsx)("font",{color:"blue",children:"\u3010Attention\u3011"}),"\n",(0,c.jsxs)(n.p,{children:["This interface should be used after calling ",(0,c.jsx)(n.code,{children:"Encoder.encode()"})," to create the encoding channel."]}),"\n",(0,c.jsx)("font",{color:"blue",children:"\u3010Code Sample\u3011"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-python",children:'import sys, os, time\n\nimport numpy as np\nimport cv2\nfrom hobot_vio import libsrcampy\n\ndef test_encode():\n    #create encode object\n    enc = libsrcampy.Encoder()\n    ret = enc.encode(0, 1, 1920, 1080)\n    print("Encoder encode return:%d" % ret)\n\n    #save encoded data to file\n    fo = open("encode.h264", "wb+")\n    a = 0\n    fin = open("output.img", "rb")\n    input_img = fin.read()\n    fin.close()\n    while a < 100:\n        #send image data to encoder\n        ret = enc.encode_file(input_img)\n        print("Encoder encode_file return:%d" % ret)\n        #get encoded data\n        img = enc.get_img()\n        if img is not None:\n            fo.write(img)\n            print("encode write image success count: %d" % a)\n        else:\n            print("encode write image failed count: %d" % a)\n        a = a + 1\n\nenc.close()\nprint("test_encode done!!!")\n\ntest_encode()\n\n'})}),"\n",(0,c.jsx)(n.h2,{id:"close",children:"close"}),"\n",(0,c.jsx)("font",{color:"Blue",children:"\u3010Description\u3011"}),"\n",(0,c.jsx)(n.p,{children:"Close the enabled encoding channel."}),"\n",(0,c.jsx)("font",{color:"Blue",children:"\u3010Function\u3011"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-python",children:"Encoder.close()\n"})}),"\n",(0,c.jsx)("font",{color:"Blue",children:"\u3010Parameters\u3011"}),"\n",(0,c.jsx)(n.p,{children:"None"}),"\n",(0,c.jsx)("font",{color:"Blue",children:"\u3010Usage\u3011"}),"\n",(0,c.jsx)(n.p,{children:"None"}),"\n",(0,c.jsx)("font",{color:"Blue",children:"\u3010Return\u3011"}),"\n",(0,c.jsxs)(n.table,{children:[(0,c.jsx)(n.thead,{children:(0,c.jsxs)(n.tr,{children:[(0,c.jsx)(n.th,{children:"Return Value"}),(0,c.jsx)(n.th,{children:"Definition"})]})}),(0,c.jsxs)(n.tbody,{children:[(0,c.jsxs)(n.tr,{children:[(0,c.jsx)(n.td,{children:"0"}),(0,c.jsx)(n.td,{children:"Success"})]}),(0,c.jsxs)(n.tr,{children:[(0,c.jsx)(n.td,{children:"-1"}),(0,c.jsx)(n.td,{children:"Failed"})]})]})]}),"\n",(0,c.jsx)("font",{color:"Blue",children:"\u3010Note\u3011"}),"\n",(0,c.jsxs)(n.p,{children:["This interface should be used after calling ",(0,c.jsx)(n.code,{children:"Encoder.encode()"})," to create the encoding channel.\n",(0,c.jsx)("font",{color:"Blue",children:"\u3010Reference Code\u3011"})]}),"\n",(0,c.jsx)(n.p,{children:"None"})]})}function h(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(a,{...e})}):a(e)}}}]);