"use strict";(self.webpackChunkrdk_doc=self.webpackChunkrdk_doc||[]).push([[5365],{28453:(e,n,i)=>{i.d(n,{R:()=>d,x:()=>l});var r=i(96540);const t={},c=r.createContext(t);function d(e){const n=r.useContext(c);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:d(e.components),r.createElement(c.Provider,{value:n},e.children)}},74784:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>d,default:()=>h,frontMatter:()=>c,metadata:()=>l,toc:()=>s});var r=i(74848),t=i(28453);const c={sidebar_position:2},d=void 0,l={id:"Basic_Application/multi_media/multi_media_api/pydev_multimedia_api_ultra/object_encoder",title:"object_encoder",description:"encode",source:"@site/i18n/en/docusaurus-plugin-content-docs/current/03_Basic_Application/04_multi_media/multi_media_api/pydev_multimedia_api_ultra/object_encoder.md",sourceDirName:"03_Basic_Application/04_multi_media/multi_media_api/pydev_multimedia_api_ultra",slug:"/Basic_Application/multi_media/multi_media_api/pydev_multimedia_api_ultra/object_encoder",permalink:"/rdk_doc/en/Basic_Application/multi_media/multi_media_api/pydev_multimedia_api_ultra/object_encoder",draft:!1,unlisted:!1,editUrl:"https://github.com/D-Robotics/rdk_doc/blob/main/docs/03_Basic_Application/04_multi_media/multi_media_api/pydev_multimedia_api_ultra/object_encoder.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Camera Object",permalink:"/rdk_doc/en/Basic_Application/multi_media/multi_media_api/pydev_multimedia_api_ultra/object_camera"},next:{title:"Decoder Object",permalink:"/rdk_doc/en/Basic_Application/multi_media/multi_media_api/pydev_multimedia_api_ultra/object_decoder"}},o={},s=[{value:"encode",id:"encode",level:2},{value:"send_frame",id:"send_frame",level:2},{value:"get_frame",id:"get_frame",level:2},{value:"close",id:"close",level:2}];function a(e){const n={code:"code",h2:"h2",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"encode",children:"encode"}),"\n",(0,r.jsx)("font",{color:"Blue",children:"\u3010Function Description\u3011"}),"\n",(0,r.jsx)(n.p,{children:"Configures and enables the encoding module."}),"\n",(0,r.jsx)("font",{color:"Blue",children:"\u3010Function Declaration\u3011"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"Encoder.encode(encode_type , [width, height], bits)\n\n"})}),"\n",(0,r.jsx)("font",{color:"Blue",children:"\u3010Parameter Description\u3011"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter Name"}),(0,r.jsx)(n.th,{children:"Description"}),(0,r.jsx)(n.th,{children:"Range"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"encode_type"}),(0,r.jsx)(n.td,{children:"Video encoding type"}),(0,r.jsxs)(n.td,{children:["Range 2-3, corresponding to ",(0,r.jsx)(n.code,{children:"H265"}),", ",(0,r.jsx)(n.code,{children:"MJPEG"})]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"width"}),(0,r.jsx)(n.td,{children:"Image width for the encoder module"}),(0,r.jsx)(n.td,{children:"Maximum 4096"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"height"}),(0,r.jsx)(n.td,{children:"Image height for the encoder module"}),(0,r.jsx)(n.td,{children:"Maximum 4096"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"bits"}),(0,r.jsx)(n.td,{children:"Bitrate for the encoding module"}),(0,r.jsx)(n.td,{children:"Default 8000kbps"})]})]})]}),"\n",(0,r.jsx)("font",{color:"Blue",children:"\u3010Usage\u3011"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"#create encode object\nencode = libsrcampy.Encoder()\n\n#enable encode channel 0, solution: 1080p, format: H265\nret = encode.encode(2, [1920, 1080])\n"})}),"\n",(0,r.jsx)("font",{color:"Blue",children:"\u3010Return Value\u3011"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Return Value"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{children:"Success"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"-1"}),(0,r.jsx)(n.td,{children:"Failure"})]})]})]}),"\n",(0,r.jsx)("font",{color:"Blue",children:"\u3010Notes\u3011"}),"\n",(0,r.jsx)(n.p,{children:"None"}),"\n",(0,r.jsx)("font",{color:"Blue",children:"\u3010Reference Code\u3011"}),"\n",(0,r.jsx)(n.p,{children:"None"}),"\n",(0,r.jsx)(n.h2,{id:"send_frame",children:"send_frame"}),"\n",(0,r.jsx)("font",{color:"Blue",children:"\u3010Function Description\u3011"}),"\n",(0,r.jsx)(n.p,{children:"Input an image file to the enabled encoding channel for encoding in the specified format."}),"\n",(0,r.jsx)("font",{color:"Blue",children:"\u3010Function Declaration\u3011"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"Encoder.send_frame(img)\n"})}),"\n",(0,r.jsx)("font",{color:"Blue",children:"\u3010Parameter Description\u3011"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Parameter Name"}),(0,r.jsx)(n.th,{children:"Description"}),(0,r.jsx)(n.th,{children:"Value Range"})]})}),(0,r.jsx)(n.tbody,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"img"}),(0,r.jsx)(n.td,{children:"Image data to be encoded, must use NV12 format"}),(0,r.jsx)(n.td,{children:"None"})]})})]}),"\n",(0,r.jsx)("font",{color:"Blue",children:"\u3010Usage\u3011"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'fin = open("output.img", "rb")\ninput_img = fin.read()\nfin.close()\n\n#input image data to encode\nret = encode.send_frame(input_img)\n'})}),"\n",(0,r.jsx)("font",{color:"Blue",children:"\u3010Return Value\u3011"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Return Value"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{children:"Success"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"-1"}),(0,r.jsx)(n.td,{children:"Failure"})]})]})]}),"\n",(0,r.jsx)("font",{color:"Blue",children:"\u3010Notes\u3011"}),"\n",(0,r.jsx)(n.p,{children:"None"}),"\n",(0,r.jsx)("font",{color:"Blue",children:"\u3010Reference Code\u3011"}),"\n",(0,r.jsx)(n.p,{children:"None"}),"\n",(0,r.jsx)(n.h2,{id:"get_frame",children:"get_frame"}),"\n",(0,r.jsx)("font",{color:"Blue",children:"\u3010Function Description\u3011"}),"\n",(0,r.jsx)(n.p,{children:"Retrieve the encoded data"}),"\n",(0,r.jsx)("font",{color:"Blue",children:"\u3010Function Declaration\u3011"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"Encoder.get_frame()\n"})}),"\n",(0,r.jsx)("font",{color:"Blue",children:"\u3010Usage\u3011"}),"\n",(0,r.jsx)(n.p,{children:"None"}),"\n",(0,r.jsx)("font",{color:"Blue",children:"\u3010Parameter Description\u3011"}),"\n",(0,r.jsx)(n.p,{children:"None"}),"\n",(0,r.jsx)("font",{color:"Blue",children:"\u3010Return Value\u3011"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Return Value"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{children:"Success"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"-1"}),(0,r.jsx)(n.td,{children:"Failure"})]})]})]}),"\n",(0,r.jsx)("font",{color:"Blue",children:"\u3010Notes\u3011"}),"\n",(0,r.jsxs)(n.p,{children:["This interface should be used after calling ",(0,r.jsx)(n.code,{children:"Encoder.encode()"})," to create an encoding channel."]}),"\n",(0,r.jsx)("font",{color:"Blue",children:"\u3010Reference Code\u3011"}),"\n",(0,r.jsx)(n.p,{children:"None"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:'import sys, os, time\n\nimport numpy as np\nimport cv2\nfrom hobot_vio import libsrcampy\n\ndef test_encode():\n    #create encode object\n    enc = libsrcampy.Encoder()\n    ret = enc.encode(2, [1920, 1080])\n    print("Encoder encode return:%d" % ret)\n\n    #save encoded data to file\n    fo = open("encode.h264", "wb+")\n    a = 0\n    fin = open("output.img", "rb")\n    input_img = fin.read()\n    fin.close()\n    while a < 100:\n        #send image data to encoder\n        ret = enc.send_frame(input_img)\n        print("Encoder send_frame return:%d" % ret)\n        #get encoded data\n        img = enc.get_frame()\n        if img is not None:\n            fo.write(img)\n            print("encode write image success count: %d" % a)\n        else:\n            print("encode write image failed count: %d" % a)\n        a = a + 1\n\n    enc.close()\n    print("test_encode done!!!")\n\ntest_encode()\n'})}),"\n",(0,r.jsx)(n.h2,{id:"close",children:"close"}),"\n",(0,r.jsx)("font",{color:"Blue",children:"\u3010\u529f\u80fd\u63cf\u8ff0\u3011"}),"\n",(0,r.jsx)(n.p,{children:"Closes the enabled encoding channel."}),"\n",(0,r.jsx)("font",{color:"Blue",children:"\u3010\u51fd\u6570\u58f0\u660e\u3011"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-python",children:"Encoder.close()\n"})}),"\n",(0,r.jsx)("font",{color:"Blue",children:"\u3010Parameter Description\u3011"}),"\n",(0,r.jsx)(n.p,{children:"None"}),"\n",(0,r.jsx)("font",{color:"Blue",children:"\u3010Usage\u3011"}),"\n",(0,r.jsx)(n.p,{children:"None"}),"\n",(0,r.jsx)("font",{color:"Blue",children:"\u3010Return Values\u3011"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Return Value"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"0"}),(0,r.jsx)(n.td,{children:"Success"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"-1"}),(0,r.jsx)(n.td,{children:"Failure"})]})]})]}),"\n",(0,r.jsx)("font",{color:"Blue",children:"\u3010Notes\u3011"}),"\n",(0,r.jsxs)(n.p,{children:["This interface should be used after the ",(0,r.jsx)(n.code,{children:"Encoder.encode()"})," function has been called to create the encoding channel."]}),"\n",(0,r.jsx)("font",{color:"Blue",children:"\u3010Reference Code\u3011"}),"\n",(0,r.jsx)(n.p,{children:"None"})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}}}]);